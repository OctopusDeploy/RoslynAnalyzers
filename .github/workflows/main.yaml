name: "Build and Test"

# Controls when the action will run.
on:
  push:
    # Triggers the workflow on pull request events and merges/pushes to master
    branches:
      - master
      - release/*
    tags-ignore:
      - '**'
    
  pull_request:
    types: [opened, synchronize, reopened]

  schedule:
    # Daily 6am Australian/Brisbane time
    - cron: '0 20 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
 
env:
  OCTOVERSION_CurrentBranch: ${{ github.head_ref || github.ref }}
  OCTOPUS_URL: ${{ secrets.OCTOPUS_URL }}
  OCTOPUS_SPACE: Integrations
  OCTOPUS_API_KEY: ${{ secrets.DEPLOY_API_KEY }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      # Must clone the entire history for OctoVersion to work
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Note: this builds a tool for both .net 6 and 8 so get them both installed
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      # Adjustment is done prior to Nuke build as OCTOVERSION information is included in the result package.
      - name: Append OCTOVERSION_CurrentBranch with -nightly (for scheduled)
        if: github.event_name == 'schedule'
        run: echo "OCTOVERSION_CurrentBranch=${{ env.OCTOVERSION_CurrentBranch }}-nightly" >> $env:GITHUB_ENV

      - name: Nuke Build
        id: build
        run: ./build.sh

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Test Results
          path: ./TestResults/*.trx
          reporter: dotnet-trx
          fail-on-error: true

      - name: Git Tag (when not pre-release) 🏷️
        if: ${{ github.event_name != 'schedule' && !contains( steps.build.outputs.octoversion_fullsemver, '-' ) }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{ steps.build.outputs.octoversion_fullsemver }}",
              sha: context.sha
            })

      - name: Push build information to Octopus Deploy 🐙
        uses: OctopusDeploy/push-build-information-action@v3
        if: (! contains(github.ref, '/merge')) && (! contains(github.ref, '/dependabot/')) && (! contains(github.ref, 'prettybot/'))
        with:
          packages: |
            Octopus.RoslynAnalyzers
          version: ${{ steps.build.outputs.octoversion_fullsemver }}

      - name: Push Packages to Octopus Deploy 🐙
        uses: OctopusDeploy/push-package-action@v3
        if: (! contains(github.ref, '/merge')) && (! contains(github.ref, '/dependabot/')) && (! contains(github.ref, 'prettybot/'))
        with:
          packages: artifacts/*.nupkg

      - name: Create Octopus Release 🐙
        uses: OctopusDeploy/create-release-action@v3
        if: (! contains(github.ref, '/merge')) && (! contains(github.ref, '/dependabot/')) && (! contains(github.ref, 'prettybot/'))
        with:
          project: RoslynAnalyzers
          release_number: ${{ steps.build.outputs.octoversion_fullsemver }}
          channel: ${{ contains( steps.build.outputs.octoversion_fullsemver, '-' ) && 'Pre-release' || 'Defualt' }}